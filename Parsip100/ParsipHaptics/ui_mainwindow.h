/********************************************************************************
** Form generated from reading UI file 'mainwindow.ui'
**
** Created: Tue Jun 21 22:43:48 2011
**      by: Qt User Interface Compiler version 4.7.0
**
** WARNING! All changes made in this file will be lost when recompiling UI file!
********************************************************************************/

#ifndef UI_MAINWINDOW_H
#define UI_MAINWINDOW_H

#include <QtCore/QVariant>
#include <QtGui/QAction>
#include <QtGui/QApplication>
#include <QtGui/QButtonGroup>
#include <QtGui/QCheckBox>
#include <QtGui/QComboBox>
#include <QtGui/QDoubleSpinBox>
#include <QtGui/QGridLayout>
#include <QtGui/QGroupBox>
#include <QtGui/QHeaderView>
#include <QtGui/QLabel>
#include <QtGui/QLineEdit>
#include <QtGui/QListWidget>
#include <QtGui/QMainWindow>
#include <QtGui/QMenu>
#include <QtGui/QMenuBar>
#include <QtGui/QPushButton>
#include <QtGui/QRadioButton>
#include <QtGui/QScrollArea>
#include <QtGui/QSlider>
#include <QtGui/QSpinBox>
#include <QtGui/QStatusBar>
#include <QtGui/QTabWidget>
#include <QtGui/QTableView>
#include <QtGui/QToolBar>
#include <QtGui/QToolButton>
#include <QtGui/QTreeView>
#include <QtGui/QWidget>

QT_BEGIN_NAMESPACE

class Ui_MainWindow
{
public:
    QAction *actFileOpen;
    QAction *actFileExit;
    QAction *actFileSave;
    QAction *actFileClose;
    QAction *actViewResetCamera;
    QAction *actMeshSubDivide;
    QAction *actMeshPolygonize;
    QAction *actHelpAbout;
    QAction *actAddSphere;
    QAction *actAddCylinder;
    QAction *actAddRing;
    QAction *actAddDisc;
    QAction *actAddUnion;
    QAction *actAddIntersection;
    QAction *actAddDifference;
    QAction *actAddBlend;
    QAction *actAddRicciBlend;
    QAction *actAddSmoothDif;
    QAction *actAddCache;
    QAction *actAnimStart;
    QAction *actAnimStop;
    QAction *actAddPolygonPlane;
    QAction *actViewFullScreen;
    QAction *actEditTranslate;
    QAction *actEditRotate;
    QAction *actEditScale;
    QAction *actEditAlongX;
    QAction *actEditAlongY;
    QAction *actEditAlongZ;
    QAction *actEditSelect;
    QAction *actEditDeletePrimitive;
    QAction *actAddCube;
    QAction *actAddTriangle;
    QAction *actAddTwist;
    QAction *actAddTaper;
    QAction *actAddBend;
    QAction *actViewPanCamera;
    QAction *actEditMultiSelect;
    QAction *actFileExportMesh;
    QAction *actEditUndo;
    QAction *actEditRedo;
    QAction *actEditTransformSkeleton;
    QAction *actFileOpenLoadBenchmark;
    QAction *actAnimDrawGuide;
    QAction *actEditCopy;
    QAction *actionPaste;
    QAction *actEditField;
    QAction *actEditConvert;
    QAction *actAnimSetStartLoc;
    QAction *actAnimSetEndLoc;
    QAction *actAnimSetStartScale;
    QAction *actAnimSetEndScale;
    QAction *actAnimRemoveAll;
    QAction *actMeshInsert;
    QWidget *centralWidget;
    QGridLayout *gridLayout;
    QScrollArea *scrollAreaOpenGL;
    QWidget *scrollAreaWidgetContents;
    QTabWidget *tsSceneStructure;
    QWidget *tsTools;
    QSlider *sliderCubeSize;
    QLabel *label;
    QDoubleSpinBox *udCubeSize;
    QLabel *label_2;
    QCheckBox *chkComputeShaders;
    QCheckBox *chkTBB;
    QGroupBox *groupBox;
    QRadioButton *rbCube;
    QRadioButton *rbTetraHedra;
    QSlider *sliderThreadsCount;
    QSlider *sliderMouseDragScale;
    QSpinBox *udMouseDragsScale;
    QLabel *label_3;
    QSpinBox *udThreadsCount;
    QCheckBox *chkForceMC;
    QSpinBox *udTestRuns;
    QPushButton *btnRunTests;
    QLabel *label_4;
    QSlider *sliderNormalsAngle;
    QDoubleSpinBox *udNormalsAngle;
    QCheckBox *chkEnableAdaptive;
    QLabel *label_5;
    QComboBox *cboGridDim;
    QLabel *label_9;
    QSpinBox *udAnimationSpeed;
    QSlider *sliderAnimationSpeed;
    QWidget *tsDisplay;
    QGroupBox *groupBox_4;
    QComboBox *cboMaterial;
    QLabel *label_6;
    QCheckBox *chkShowNormals;
    QCheckBox *chkShowChessBoard;
    QSlider *sliderNormalLength;
    QLabel *label_8;
    QCheckBox *chkShowBoxLayer;
    QCheckBox *chkShowSeedPoints;
    QGroupBox *groupBox_2;
    QRadioButton *rbShowMeshWireFrame;
    QRadioButton *rbShowMeshSurface;
    QRadioButton *rbShowMeshNone;
    QCheckBox *chkShowBoxPrimitive;
    QCheckBox *chkShowBoxPoly;
    QCheckBox *chkShowGraph;
    QCheckBox *chkColorCodeMPUMesh;
    QCheckBox *chkShowAnimationCurves;
    QWidget *tab;
    QTableView *tblBlobProperty;
    QTreeView *treeBlob;
    QTableView *tblLayers;
    QToolButton *btnLayerAdd;
    QToolButton *btnLayerDelete;
    QPushButton *btnPrimitiveColor;
    QToolButton *btnLayerDuplicate;
    QToolButton *btnLayerSelectAll;
    QTableView *tblColors;
    QPushButton *btnEditMaterial;
    QWidget *tab_2;
    QTableView *tblStats;
    QWidget *tab_3;
    QGroupBox *groupBox_3;
    QSpinBox *udServerPort;
    QLabel *label_7;
    QPushButton *btnNetAddParticipant;
    QPushButton *btnNetStart;
    QComboBox *cboNetAddParticipant;
    QListWidget *lstNetParticipants;
    QPushButton *btnNetStop;
    QLineEdit *edtNetSendText;
    QPushButton *btnNetDelParticipant;
    QCheckBox *chkNetAll;
    QPushButton *btnNetLock;
    QGroupBox *groupBox_5;
    QPushButton *btnNetClearLog;
    QListWidget *lstNetLog;
    QMenuBar *menuBar;
    QMenu *menuFile;
    QMenu *menuEdit;
    QMenu *menuView;
    QMenu *menuMesh;
    QMenu *menuHelp;
    QMenu *menuAnimation;
    QMenu *menuEdit_2;
    QToolBar *toolbarControl;
    QStatusBar *statusBar;
    QToolBar *toolBarBlobTree;

    void setupUi(QMainWindow *MainWindow)
    {
        if (MainWindow->objectName().isEmpty())
            MainWindow->setObjectName(QString::fromUtf8("MainWindow"));
        MainWindow->resize(1111, 905);
        actFileOpen = new QAction(MainWindow);
        actFileOpen->setObjectName(QString::fromUtf8("actFileOpen"));
        actFileOpen->setCheckable(true);
        actFileOpen->setChecked(false);
        QIcon icon;
        icon.addFile(QString::fromUtf8(":/icons/load.png"), QSize(), QIcon::Normal, QIcon::On);
        actFileOpen->setIcon(icon);
        actFileExit = new QAction(MainWindow);
        actFileExit->setObjectName(QString::fromUtf8("actFileExit"));
        actFileSave = new QAction(MainWindow);
        actFileSave->setObjectName(QString::fromUtf8("actFileSave"));
        actFileSave->setCheckable(false);
        QIcon icon1;
        icon1.addFile(QString::fromUtf8(":/icons/save.png"), QSize(), QIcon::Normal, QIcon::On);
        actFileSave->setIcon(icon1);
        actFileClose = new QAction(MainWindow);
        actFileClose->setObjectName(QString::fromUtf8("actFileClose"));
        actFileClose->setCheckable(false);
        QIcon icon2;
        icon2.addFile(QString::fromUtf8(":/icons/close.png"), QSize(), QIcon::Normal, QIcon::On);
        actFileClose->setIcon(icon2);
        actViewResetCamera = new QAction(MainWindow);
        actViewResetCamera->setObjectName(QString::fromUtf8("actViewResetCamera"));
        actMeshSubDivide = new QAction(MainWindow);
        actMeshSubDivide->setObjectName(QString::fromUtf8("actMeshSubDivide"));
        actMeshPolygonize = new QAction(MainWindow);
        actMeshPolygonize->setObjectName(QString::fromUtf8("actMeshPolygonize"));
        QIcon icon3;
        icon3.addFile(QString::fromUtf8(":/icons/reset.png"), QSize(), QIcon::Normal, QIcon::On);
        actMeshPolygonize->setIcon(icon3);
        actHelpAbout = new QAction(MainWindow);
        actHelpAbout->setObjectName(QString::fromUtf8("actHelpAbout"));
        actAddSphere = new QAction(MainWindow);
        actAddSphere->setObjectName(QString::fromUtf8("actAddSphere"));
        actAddSphere->setCheckable(true);
        actAddSphere->setChecked(true);
        QIcon icon4;
        icon4.addFile(QString::fromUtf8(":/icons/prim_sphere.png"), QSize(), QIcon::Normal, QIcon::On);
        actAddSphere->setIcon(icon4);
        actAddCylinder = new QAction(MainWindow);
        actAddCylinder->setObjectName(QString::fromUtf8("actAddCylinder"));
        actAddCylinder->setCheckable(true);
        QIcon icon5;
        icon5.addFile(QString::fromUtf8(":/icons/prim_cylinder.png"), QSize(), QIcon::Normal, QIcon::On);
        actAddCylinder->setIcon(icon5);
        actAddRing = new QAction(MainWindow);
        actAddRing->setObjectName(QString::fromUtf8("actAddRing"));
        actAddRing->setCheckable(true);
        QIcon icon6;
        icon6.addFile(QString::fromUtf8(":/icons/prim_ring.png"), QSize(), QIcon::Normal, QIcon::On);
        actAddRing->setIcon(icon6);
        actAddDisc = new QAction(MainWindow);
        actAddDisc->setObjectName(QString::fromUtf8("actAddDisc"));
        actAddDisc->setCheckable(true);
        QIcon icon7;
        icon7.addFile(QString::fromUtf8(":/icons/prim_disk.png"), QSize(), QIcon::Normal, QIcon::On);
        actAddDisc->setIcon(icon7);
        actAddUnion = new QAction(MainWindow);
        actAddUnion->setObjectName(QString::fromUtf8("actAddUnion"));
        actAddUnion->setCheckable(false);
        actAddUnion->setChecked(false);
        QIcon icon8;
        icon8.addFile(QString::fromUtf8(":/icons/op_union.png"), QSize(), QIcon::Normal, QIcon::On);
        actAddUnion->setIcon(icon8);
        actAddIntersection = new QAction(MainWindow);
        actAddIntersection->setObjectName(QString::fromUtf8("actAddIntersection"));
        actAddIntersection->setCheckable(false);
        QIcon icon9;
        icon9.addFile(QString::fromUtf8(":/icons/op_intersect.png"), QSize(), QIcon::Normal, QIcon::On);
        actAddIntersection->setIcon(icon9);
        actAddDifference = new QAction(MainWindow);
        actAddDifference->setObjectName(QString::fromUtf8("actAddDifference"));
        actAddDifference->setCheckable(false);
        QIcon icon10;
        icon10.addFile(QString::fromUtf8(":/icons/op_dif.png"), QSize(), QIcon::Normal, QIcon::On);
        actAddDifference->setIcon(icon10);
        actAddBlend = new QAction(MainWindow);
        actAddBlend->setObjectName(QString::fromUtf8("actAddBlend"));
        actAddBlend->setCheckable(false);
        QIcon icon11;
        icon11.addFile(QString::fromUtf8(":/icons/op_blend.png"), QSize(), QIcon::Normal, QIcon::On);
        actAddBlend->setIcon(icon11);
        actAddRicciBlend = new QAction(MainWindow);
        actAddRicciBlend->setObjectName(QString::fromUtf8("actAddRicciBlend"));
        actAddRicciBlend->setCheckable(false);
        QIcon icon12;
        icon12.addFile(QString::fromUtf8(":/icons/op_blendricci.png"), QSize(), QIcon::Normal, QIcon::On);
        actAddRicciBlend->setIcon(icon12);
        actAddSmoothDif = new QAction(MainWindow);
        actAddSmoothDif->setObjectName(QString::fromUtf8("actAddSmoothDif"));
        actAddSmoothDif->setCheckable(false);
        QIcon icon13;
        icon13.addFile(QString::fromUtf8(":/icons/op_difsmooth.png"), QSize(), QIcon::Normal, QIcon::On);
        actAddSmoothDif->setIcon(icon13);
        actAddCache = new QAction(MainWindow);
        actAddCache->setObjectName(QString::fromUtf8("actAddCache"));
        actAddCache->setEnabled(false);
        actAnimStart = new QAction(MainWindow);
        actAnimStart->setObjectName(QString::fromUtf8("actAnimStart"));
        actAnimStop = new QAction(MainWindow);
        actAnimStop->setObjectName(QString::fromUtf8("actAnimStop"));
        actAddPolygonPlane = new QAction(MainWindow);
        actAddPolygonPlane->setObjectName(QString::fromUtf8("actAddPolygonPlane"));
        actAddPolygonPlane->setCheckable(true);
        actAddPolygonPlane->setEnabled(false);
        QIcon icon14;
        icon14.addFile(QString::fromUtf8(":/icons/prim_polygon.png"), QSize(), QIcon::Normal, QIcon::On);
        actAddPolygonPlane->setIcon(icon14);
        actViewFullScreen = new QAction(MainWindow);
        actViewFullScreen->setObjectName(QString::fromUtf8("actViewFullScreen"));
        actEditTranslate = new QAction(MainWindow);
        actEditTranslate->setObjectName(QString::fromUtf8("actEditTranslate"));
        actEditRotate = new QAction(MainWindow);
        actEditRotate->setObjectName(QString::fromUtf8("actEditRotate"));
        actEditScale = new QAction(MainWindow);
        actEditScale->setObjectName(QString::fromUtf8("actEditScale"));
        actEditAlongX = new QAction(MainWindow);
        actEditAlongX->setObjectName(QString::fromUtf8("actEditAlongX"));
        actEditAlongY = new QAction(MainWindow);
        actEditAlongY->setObjectName(QString::fromUtf8("actEditAlongY"));
        actEditAlongZ = new QAction(MainWindow);
        actEditAlongZ->setObjectName(QString::fromUtf8("actEditAlongZ"));
        actEditSelect = new QAction(MainWindow);
        actEditSelect->setObjectName(QString::fromUtf8("actEditSelect"));
        actEditDeletePrimitive = new QAction(MainWindow);
        actEditDeletePrimitive->setObjectName(QString::fromUtf8("actEditDeletePrimitive"));
        actEditDeletePrimitive->setEnabled(true);
        actAddCube = new QAction(MainWindow);
        actAddCube->setObjectName(QString::fromUtf8("actAddCube"));
        actAddCube->setCheckable(true);
        QIcon icon15;
        icon15.addFile(QString::fromUtf8(":/icons/prim_cube.png"), QSize(), QIcon::Normal, QIcon::On);
        actAddCube->setIcon(icon15);
        actAddTriangle = new QAction(MainWindow);
        actAddTriangle->setObjectName(QString::fromUtf8("actAddTriangle"));
        actAddTriangle->setCheckable(true);
        QIcon icon16;
        icon16.addFile(QString::fromUtf8(":/icons/triangle.png"), QSize(), QIcon::Normal, QIcon::Off);
        actAddTriangle->setIcon(icon16);
        actAddTwist = new QAction(MainWindow);
        actAddTwist->setObjectName(QString::fromUtf8("actAddTwist"));
        actAddTwist->setCheckable(false);
        QIcon icon17;
        icon17.addFile(QString::fromUtf8(":/icons/twist.png"), QSize(), QIcon::Normal, QIcon::Off);
        actAddTwist->setIcon(icon17);
        actAddTaper = new QAction(MainWindow);
        actAddTaper->setObjectName(QString::fromUtf8("actAddTaper"));
        actAddTaper->setCheckable(false);
        QIcon icon18;
        icon18.addFile(QString::fromUtf8(":/icons/taper.png"), QSize(), QIcon::Normal, QIcon::Off);
        actAddTaper->setIcon(icon18);
        actAddBend = new QAction(MainWindow);
        actAddBend->setObjectName(QString::fromUtf8("actAddBend"));
        actAddBend->setCheckable(false);
        QIcon icon19;
        icon19.addFile(QString::fromUtf8(":/icons/bend.png"), QSize(), QIcon::Normal, QIcon::Off);
        actAddBend->setIcon(icon19);
        actViewPanCamera = new QAction(MainWindow);
        actViewPanCamera->setObjectName(QString::fromUtf8("actViewPanCamera"));
        actViewPanCamera->setCheckable(true);
        actViewPanCamera->setEnabled(true);
        actEditMultiSelect = new QAction(MainWindow);
        actEditMultiSelect->setObjectName(QString::fromUtf8("actEditMultiSelect"));
        actEditMultiSelect->setCheckable(true);
        actFileExportMesh = new QAction(MainWindow);
        actFileExportMesh->setObjectName(QString::fromUtf8("actFileExportMesh"));
        actFileExportMesh->setEnabled(true);
        actEditUndo = new QAction(MainWindow);
        actEditUndo->setObjectName(QString::fromUtf8("actEditUndo"));
        actEditUndo->setEnabled(false);
        actEditUndo->setVisible(true);
        actEditRedo = new QAction(MainWindow);
        actEditRedo->setObjectName(QString::fromUtf8("actEditRedo"));
        actEditRedo->setEnabled(false);
        actEditTransformSkeleton = new QAction(MainWindow);
        actEditTransformSkeleton->setObjectName(QString::fromUtf8("actEditTransformSkeleton"));
        actEditTransformSkeleton->setCheckable(true);
        actFileOpenLoadBenchmark = new QAction(MainWindow);
        actFileOpenLoadBenchmark->setObjectName(QString::fromUtf8("actFileOpenLoadBenchmark"));
        actAnimDrawGuide = new QAction(MainWindow);
        actAnimDrawGuide->setObjectName(QString::fromUtf8("actAnimDrawGuide"));
        actEditCopy = new QAction(MainWindow);
        actEditCopy->setObjectName(QString::fromUtf8("actEditCopy"));
        actionPaste = new QAction(MainWindow);
        actionPaste->setObjectName(QString::fromUtf8("actionPaste"));
        actEditField = new QAction(MainWindow);
        actEditField->setObjectName(QString::fromUtf8("actEditField"));
        actEditConvert = new QAction(MainWindow);
        actEditConvert->setObjectName(QString::fromUtf8("actEditConvert"));
        actAnimSetStartLoc = new QAction(MainWindow);
        actAnimSetStartLoc->setObjectName(QString::fromUtf8("actAnimSetStartLoc"));
        actAnimSetEndLoc = new QAction(MainWindow);
        actAnimSetEndLoc->setObjectName(QString::fromUtf8("actAnimSetEndLoc"));
        actAnimSetStartScale = new QAction(MainWindow);
        actAnimSetStartScale->setObjectName(QString::fromUtf8("actAnimSetStartScale"));
        actAnimSetEndScale = new QAction(MainWindow);
        actAnimSetEndScale->setObjectName(QString::fromUtf8("actAnimSetEndScale"));
        actAnimRemoveAll = new QAction(MainWindow);
        actAnimRemoveAll->setObjectName(QString::fromUtf8("actAnimRemoveAll"));
        actMeshInsert = new QAction(MainWindow);
        actMeshInsert->setObjectName(QString::fromUtf8("actMeshInsert"));
        centralWidget = new QWidget(MainWindow);
        centralWidget->setObjectName(QString::fromUtf8("centralWidget"));
        gridLayout = new QGridLayout(centralWidget);
        gridLayout->setSpacing(6);
        gridLayout->setContentsMargins(11, 11, 11, 11);
        gridLayout->setObjectName(QString::fromUtf8("gridLayout"));
        scrollAreaOpenGL = new QScrollArea(centralWidget);
        scrollAreaOpenGL->setObjectName(QString::fromUtf8("scrollAreaOpenGL"));
        scrollAreaOpenGL->setMinimumSize(QSize(100, 100));
        scrollAreaOpenGL->setMouseTracking(false);
        scrollAreaOpenGL->setWidgetResizable(true);
        scrollAreaOpenGL->setAlignment(Qt::AlignLeading|Qt::AlignLeft|Qt::AlignTop);
        scrollAreaWidgetContents = new QWidget();
        scrollAreaWidgetContents->setObjectName(QString::fromUtf8("scrollAreaWidgetContents"));
        scrollAreaWidgetContents->setGeometry(QRect(0, 0, 805, 712));
        scrollAreaOpenGL->setWidget(scrollAreaWidgetContents);

        gridLayout->addWidget(scrollAreaOpenGL, 0, 0, 1, 1);

        tsSceneStructure = new QTabWidget(centralWidget);
        tsSceneStructure->setObjectName(QString::fromUtf8("tsSceneStructure"));
        QSizePolicy sizePolicy(QSizePolicy::Fixed, QSizePolicy::Expanding);
        sizePolicy.setHorizontalStretch(0);
        sizePolicy.setVerticalStretch(0);
        sizePolicy.setHeightForWidth(tsSceneStructure->sizePolicy().hasHeightForWidth());
        tsSceneStructure->setSizePolicy(sizePolicy);
        tsSceneStructure->setMinimumSize(QSize(280, 0));
        tsTools = new QWidget();
        tsTools->setObjectName(QString::fromUtf8("tsTools"));
        sliderCubeSize = new QSlider(tsTools);
        sliderCubeSize->setObjectName(QString::fromUtf8("sliderCubeSize"));
        sliderCubeSize->setGeometry(QRect(10, 63, 161, 20));
        sliderCubeSize->setMinimum(1);
        sliderCubeSize->setMaximum(100);
        sliderCubeSize->setOrientation(Qt::Horizontal);
        label = new QLabel(tsTools);
        label->setObjectName(QString::fromUtf8("label"));
        label->setGeometry(QRect(10, 42, 141, 20));
        udCubeSize = new QDoubleSpinBox(tsTools);
        udCubeSize->setObjectName(QString::fromUtf8("udCubeSize"));
        udCubeSize->setGeometry(QRect(180, 60, 51, 22));
        udCubeSize->setMinimum(0.01);
        udCubeSize->setMaximum(1);
        udCubeSize->setSingleStep(0.1);
        label_2 = new QLabel(tsTools);
        label_2->setObjectName(QString::fromUtf8("label_2"));
        label_2->setGeometry(QRect(10, 130, 121, 16));
        chkComputeShaders = new QCheckBox(tsTools);
        chkComputeShaders->setObjectName(QString::fromUtf8("chkComputeShaders"));
        chkComputeShaders->setEnabled(false);
        chkComputeShaders->setGeometry(QRect(10, 327, 151, 17));
        chkTBB = new QCheckBox(tsTools);
        chkTBB->setObjectName(QString::fromUtf8("chkTBB"));
        chkTBB->setEnabled(false);
        chkTBB->setGeometry(QRect(10, 347, 70, 17));
        groupBox = new QGroupBox(tsTools);
        groupBox->setObjectName(QString::fromUtf8("groupBox"));
        groupBox->setGeometry(QRect(10, 267, 221, 51));
        rbCube = new QRadioButton(groupBox);
        rbCube->setObjectName(QString::fromUtf8("rbCube"));
        rbCube->setGeometry(QRect(10, 20, 82, 17));
        rbCube->setChecked(true);
        rbTetraHedra = new QRadioButton(groupBox);
        rbTetraHedra->setObjectName(QString::fromUtf8("rbTetraHedra"));
        rbTetraHedra->setGeometry(QRect(110, 20, 82, 17));
        sliderThreadsCount = new QSlider(tsTools);
        sliderThreadsCount->setObjectName(QString::fromUtf8("sliderThreadsCount"));
        sliderThreadsCount->setGeometry(QRect(10, 150, 160, 19));
        sliderThreadsCount->setMinimum(1);
        sliderThreadsCount->setMaximum(64);
        sliderThreadsCount->setPageStep(1);
        sliderThreadsCount->setOrientation(Qt::Horizontal);
        sliderMouseDragScale = new QSlider(tsTools);
        sliderMouseDragScale->setObjectName(QString::fromUtf8("sliderMouseDragScale"));
        sliderMouseDragScale->setGeometry(QRect(10, 199, 160, 19));
        sliderMouseDragScale->setMinimum(1);
        sliderMouseDragScale->setMaximum(1000);
        sliderMouseDragScale->setValue(10);
        sliderMouseDragScale->setOrientation(Qt::Horizontal);
        udMouseDragsScale = new QSpinBox(tsTools);
        udMouseDragsScale->setObjectName(QString::fromUtf8("udMouseDragsScale"));
        udMouseDragsScale->setGeometry(QRect(180, 199, 51, 22));
        udMouseDragsScale->setMinimum(1);
        udMouseDragsScale->setMaximum(1000);
        udMouseDragsScale->setValue(10);
        label_3 = new QLabel(tsTools);
        label_3->setObjectName(QString::fromUtf8("label_3"));
        label_3->setGeometry(QRect(10, 179, 121, 16));
        udThreadsCount = new QSpinBox(tsTools);
        udThreadsCount->setObjectName(QString::fromUtf8("udThreadsCount"));
        udThreadsCount->setGeometry(QRect(180, 150, 50, 22));
        udThreadsCount->setMinimum(1);
        udThreadsCount->setMaximum(64);
        chkForceMC = new QCheckBox(tsTools);
        chkForceMC->setObjectName(QString::fromUtf8("chkForceMC"));
        chkForceMC->setGeometry(QRect(10, 367, 201, 17));
        udTestRuns = new QSpinBox(tsTools);
        udTestRuns->setObjectName(QString::fromUtf8("udTestRuns"));
        udTestRuns->setGeometry(QRect(140, 417, 81, 22));
        udTestRuns->setMinimum(1);
        udTestRuns->setMaximum(1000000);
        udTestRuns->setValue(1000);
        btnRunTests = new QPushButton(tsTools);
        btnRunTests->setObjectName(QString::fromUtf8("btnRunTests"));
        btnRunTests->setGeometry(QRect(10, 417, 121, 23));
        label_4 = new QLabel(tsTools);
        label_4->setObjectName(QString::fromUtf8("label_4"));
        label_4->setGeometry(QRect(10, 90, 231, 20));
        sliderNormalsAngle = new QSlider(tsTools);
        sliderNormalsAngle->setObjectName(QString::fromUtf8("sliderNormalsAngle"));
        sliderNormalsAngle->setGeometry(QRect(10, 110, 161, 20));
        sliderNormalsAngle->setMinimum(0);
        sliderNormalsAngle->setMaximum(180);
        sliderNormalsAngle->setOrientation(Qt::Horizontal);
        udNormalsAngle = new QDoubleSpinBox(tsTools);
        udNormalsAngle->setObjectName(QString::fromUtf8("udNormalsAngle"));
        udNormalsAngle->setGeometry(QRect(180, 110, 51, 22));
        udNormalsAngle->setMinimum(0);
        udNormalsAngle->setMaximum(180);
        udNormalsAngle->setSingleStep(0.1);
        udNormalsAngle->setValue(5);
        chkEnableAdaptive = new QCheckBox(tsTools);
        chkEnableAdaptive->setObjectName(QString::fromUtf8("chkEnableAdaptive"));
        chkEnableAdaptive->setGeometry(QRect(10, 387, 201, 17));
        chkEnableAdaptive->setChecked(true);
        label_5 = new QLabel(tsTools);
        label_5->setObjectName(QString::fromUtf8("label_5"));
        label_5->setGeometry(QRect(10, 0, 121, 16));
        cboGridDim = new QComboBox(tsTools);
        cboGridDim->setObjectName(QString::fromUtf8("cboGridDim"));
        cboGridDim->setGeometry(QRect(8, 20, 221, 22));
        label_9 = new QLabel(tsTools);
        label_9->setObjectName(QString::fromUtf8("label_9"));
        label_9->setGeometry(QRect(10, 223, 121, 16));
        udAnimationSpeed = new QSpinBox(tsTools);
        udAnimationSpeed->setObjectName(QString::fromUtf8("udAnimationSpeed"));
        udAnimationSpeed->setGeometry(QRect(180, 243, 51, 22));
        udAnimationSpeed->setMinimum(1);
        udAnimationSpeed->setMaximum(100);
        udAnimationSpeed->setValue(1);
        sliderAnimationSpeed = new QSlider(tsTools);
        sliderAnimationSpeed->setObjectName(QString::fromUtf8("sliderAnimationSpeed"));
        sliderAnimationSpeed->setGeometry(QRect(10, 243, 160, 19));
        sliderAnimationSpeed->setMinimum(1);
        sliderAnimationSpeed->setMaximum(100);
        sliderAnimationSpeed->setPageStep(1);
        sliderAnimationSpeed->setValue(1);
        sliderAnimationSpeed->setOrientation(Qt::Horizontal);
        tsSceneStructure->addTab(tsTools, QString());
        tsDisplay = new QWidget();
        tsDisplay->setObjectName(QString::fromUtf8("tsDisplay"));
        groupBox_4 = new QGroupBox(tsDisplay);
        groupBox_4->setObjectName(QString::fromUtf8("groupBox_4"));
        groupBox_4->setGeometry(QRect(20, 10, 211, 411));
        cboMaterial = new QComboBox(groupBox_4);
        cboMaterial->setObjectName(QString::fromUtf8("cboMaterial"));
        cboMaterial->setGeometry(QRect(20, 380, 161, 22));
        label_6 = new QLabel(groupBox_4);
        label_6->setObjectName(QString::fromUtf8("label_6"));
        label_6->setGeometry(QRect(20, 360, 101, 16));
        chkShowNormals = new QCheckBox(groupBox_4);
        chkShowNormals->setObjectName(QString::fromUtf8("chkShowNormals"));
        chkShowNormals->setGeometry(QRect(20, 119, 141, 18));
        chkShowChessBoard = new QCheckBox(groupBox_4);
        chkShowChessBoard->setObjectName(QString::fromUtf8("chkShowChessBoard"));
        chkShowChessBoard->setGeometry(QRect(20, 139, 141, 18));
        chkShowChessBoard->setChecked(true);
        sliderNormalLength = new QSlider(groupBox_4);
        sliderNormalLength->setObjectName(QString::fromUtf8("sliderNormalLength"));
        sliderNormalLength->setGeometry(QRect(20, 332, 160, 19));
        sliderNormalLength->setMaximum(100);
        sliderNormalLength->setValue(5);
        sliderNormalLength->setOrientation(Qt::Horizontal);
        label_8 = new QLabel(groupBox_4);
        label_8->setObjectName(QString::fromUtf8("label_8"));
        label_8->setGeometry(QRect(20, 314, 101, 16));
        chkShowBoxLayer = new QCheckBox(groupBox_4);
        chkShowBoxLayer->setObjectName(QString::fromUtf8("chkShowBoxLayer"));
        chkShowBoxLayer->setGeometry(QRect(20, 159, 161, 18));
        chkShowSeedPoints = new QCheckBox(groupBox_4);
        chkShowSeedPoints->setObjectName(QString::fromUtf8("chkShowSeedPoints"));
        chkShowSeedPoints->setGeometry(QRect(20, 220, 141, 18));
        groupBox_2 = new QGroupBox(groupBox_4);
        groupBox_2->setObjectName(QString::fromUtf8("groupBox_2"));
        groupBox_2->setGeometry(QRect(10, 20, 181, 91));
        rbShowMeshWireFrame = new QRadioButton(groupBox_2);
        rbShowMeshWireFrame->setObjectName(QString::fromUtf8("rbShowMeshWireFrame"));
        rbShowMeshWireFrame->setGeometry(QRect(10, 40, 131, 17));
        rbShowMeshSurface = new QRadioButton(groupBox_2);
        rbShowMeshSurface->setObjectName(QString::fromUtf8("rbShowMeshSurface"));
        rbShowMeshSurface->setGeometry(QRect(10, 60, 111, 21));
        rbShowMeshSurface->setChecked(false);
        rbShowMeshNone = new QRadioButton(groupBox_2);
        rbShowMeshNone->setObjectName(QString::fromUtf8("rbShowMeshNone"));
        rbShowMeshNone->setGeometry(QRect(10, 16, 111, 21));
        rbShowMeshNone->setChecked(true);
        chkShowBoxPrimitive = new QCheckBox(groupBox_4);
        chkShowBoxPrimitive->setObjectName(QString::fromUtf8("chkShowBoxPrimitive"));
        chkShowBoxPrimitive->setGeometry(QRect(20, 180, 161, 17));
        chkShowBoxPoly = new QCheckBox(groupBox_4);
        chkShowBoxPoly->setObjectName(QString::fromUtf8("chkShowBoxPoly"));
        chkShowBoxPoly->setGeometry(QRect(20, 200, 171, 17));
        chkShowGraph = new QCheckBox(groupBox_4);
        chkShowGraph->setObjectName(QString::fromUtf8("chkShowGraph"));
        chkShowGraph->setGeometry(QRect(20, 240, 91, 17));
        chkColorCodeMPUMesh = new QCheckBox(groupBox_4);
        chkColorCodeMPUMesh->setObjectName(QString::fromUtf8("chkColorCodeMPUMesh"));
        chkColorCodeMPUMesh->setGeometry(QRect(20, 260, 161, 17));
        chkShowAnimationCurves = new QCheckBox(groupBox_4);
        chkShowAnimationCurves->setObjectName(QString::fromUtf8("chkShowAnimationCurves"));
        chkShowAnimationCurves->setGeometry(QRect(20, 280, 161, 17));
        tsSceneStructure->addTab(tsDisplay, QString());
        tab = new QWidget();
        tab->setObjectName(QString::fromUtf8("tab"));
        tblBlobProperty = new QTableView(tab);
        tblBlobProperty->setObjectName(QString::fromUtf8("tblBlobProperty"));
        tblBlobProperty->setGeometry(QRect(0, 380, 241, 161));
        tblBlobProperty->viewport()->setProperty("cursor", QVariant(QCursor(Qt::ArrowCursor)));
        tblBlobProperty->setAlternatingRowColors(true);
        tblBlobProperty->setShowGrid(true);
        tblBlobProperty->horizontalHeader()->setMinimumSectionSize(15);
        treeBlob = new QTreeView(tab);
        treeBlob->setObjectName(QString::fromUtf8("treeBlob"));
        treeBlob->setGeometry(QRect(0, 210, 241, 161));
        treeBlob->setMidLineWidth(1);
        tblLayers = new QTableView(tab);
        tblLayers->setObjectName(QString::fromUtf8("tblLayers"));
        tblLayers->setGeometry(QRect(0, 50, 241, 151));
        tblLayers->setSelectionBehavior(QAbstractItemView::SelectRows);
        btnLayerAdd = new QToolButton(tab);
        btnLayerAdd->setObjectName(QString::fromUtf8("btnLayerAdd"));
        btnLayerAdd->setGeometry(QRect(5, 10, 51, 31));
        btnLayerDelete = new QToolButton(tab);
        btnLayerDelete->setObjectName(QString::fromUtf8("btnLayerDelete"));
        btnLayerDelete->setEnabled(false);
        btnLayerDelete->setGeometry(QRect(63, 10, 51, 31));
        btnPrimitiveColor = new QPushButton(tab);
        btnPrimitiveColor->setObjectName(QString::fromUtf8("btnPrimitiveColor"));
        btnPrimitiveColor->setGeometry(QRect(0, 550, 241, 30));
        btnPrimitiveColor->setAutoFillBackground(true);
        btnPrimitiveColor->setFlat(false);
        btnLayerDuplicate = new QToolButton(tab);
        btnLayerDuplicate->setObjectName(QString::fromUtf8("btnLayerDuplicate"));
        btnLayerDuplicate->setEnabled(false);
        btnLayerDuplicate->setGeometry(QRect(123, 10, 51, 31));
        btnLayerSelectAll = new QToolButton(tab);
        btnLayerSelectAll->setObjectName(QString::fromUtf8("btnLayerSelectAll"));
        btnLayerSelectAll->setEnabled(false);
        btnLayerSelectAll->setGeometry(QRect(185, 10, 51, 31));
        tblColors = new QTableView(tab);
        tblColors->setObjectName(QString::fromUtf8("tblColors"));
        tblColors->setGeometry(QRect(0, 590, 241, 61));
        QSizePolicy sizePolicy1(QSizePolicy::Expanding, QSizePolicy::Fixed);
        sizePolicy1.setHorizontalStretch(0);
        sizePolicy1.setVerticalStretch(0);
        sizePolicy1.setHeightForWidth(tblColors->sizePolicy().hasHeightForWidth());
        tblColors->setSizePolicy(sizePolicy1);
        tblColors->horizontalHeader()->setVisible(false);
        tblColors->verticalHeader()->setVisible(false);
        btnEditMaterial = new QPushButton(tab);
        btnEditMaterial->setObjectName(QString::fromUtf8("btnEditMaterial"));
        btnEditMaterial->setGeometry(QRect(0, 660, 75, 23));
        tsSceneStructure->addTab(tab, QString());
        tab_2 = new QWidget();
        tab_2->setObjectName(QString::fromUtf8("tab_2"));
        tblStats = new QTableView(tab_2);
        tblStats->setObjectName(QString::fromUtf8("tblStats"));
        tblStats->setGeometry(QRect(0, 0, 241, 451));
        tsSceneStructure->addTab(tab_2, QString());
        tab_3 = new QWidget();
        tab_3->setObjectName(QString::fromUtf8("tab_3"));
        groupBox_3 = new QGroupBox(tab_3);
        groupBox_3->setObjectName(QString::fromUtf8("groupBox_3"));
        groupBox_3->setGeometry(QRect(10, 10, 261, 251));
        udServerPort = new QSpinBox(groupBox_3);
        udServerPort->setObjectName(QString::fromUtf8("udServerPort"));
        udServerPort->setGeometry(QRect(140, 20, 111, 22));
        udServerPort->setMinimum(1);
        udServerPort->setMaximum(1000000);
        udServerPort->setValue(1000);
        label_7 = new QLabel(groupBox_3);
        label_7->setObjectName(QString::fromUtf8("label_7"));
        label_7->setGeometry(QRect(20, 21, 71, 16));
        btnNetAddParticipant = new QPushButton(groupBox_3);
        btnNetAddParticipant->setObjectName(QString::fromUtf8("btnNetAddParticipant"));
        btnNetAddParticipant->setGeometry(QRect(140, 80, 51, 23));
        btnNetStart = new QPushButton(groupBox_3);
        btnNetStart->setObjectName(QString::fromUtf8("btnNetStart"));
        btnNetStart->setGeometry(QRect(140, 52, 111, 23));
        cboNetAddParticipant = new QComboBox(groupBox_3);
        cboNetAddParticipant->setObjectName(QString::fromUtf8("cboNetAddParticipant"));
        cboNetAddParticipant->setGeometry(QRect(10, 80, 121, 22));
        cboNetAddParticipant->setEditable(true);
        lstNetParticipants = new QListWidget(groupBox_3);
        lstNetParticipants->setObjectName(QString::fromUtf8("lstNetParticipants"));
        lstNetParticipants->setGeometry(QRect(10, 140, 241, 71));
        btnNetStop = new QPushButton(groupBox_3);
        btnNetStop->setObjectName(QString::fromUtf8("btnNetStop"));
        btnNetStop->setEnabled(false);
        btnNetStop->setGeometry(QRect(10, 51, 121, 23));
        edtNetSendText = new QLineEdit(groupBox_3);
        edtNetSendText->setObjectName(QString::fromUtf8("edtNetSendText"));
        edtNetSendText->setEnabled(false);
        edtNetSendText->setGeometry(QRect(10, 220, 241, 20));
        btnNetDelParticipant = new QPushButton(groupBox_3);
        btnNetDelParticipant->setObjectName(QString::fromUtf8("btnNetDelParticipant"));
        btnNetDelParticipant->setGeometry(QRect(200, 80, 51, 23));
        chkNetAll = new QCheckBox(groupBox_3);
        chkNetAll->setObjectName(QString::fromUtf8("chkNetAll"));
        chkNetAll->setGeometry(QRect(10, 110, 151, 17));
        btnNetLock = new QPushButton(groupBox_3);
        btnNetLock->setObjectName(QString::fromUtf8("btnNetLock"));
        btnNetLock->setGeometry(QRect(140, 110, 111, 23));
        groupBox_5 = new QGroupBox(tab_3);
        groupBox_5->setObjectName(QString::fromUtf8("groupBox_5"));
        groupBox_5->setGeometry(QRect(10, 270, 261, 211));
        btnNetClearLog = new QPushButton(groupBox_5);
        btnNetClearLog->setObjectName(QString::fromUtf8("btnNetClearLog"));
        btnNetClearLog->setGeometry(QRect(180, 180, 75, 23));
        lstNetLog = new QListWidget(groupBox_5);
        lstNetLog->setObjectName(QString::fromUtf8("lstNetLog"));
        lstNetLog->setGeometry(QRect(10, 20, 241, 151));
        tsSceneStructure->addTab(tab_3, QString());

        gridLayout->addWidget(tsSceneStructure, 0, 1, 1, 1);

        MainWindow->setCentralWidget(centralWidget);
        menuBar = new QMenuBar(MainWindow);
        menuBar->setObjectName(QString::fromUtf8("menuBar"));
        menuBar->setGeometry(QRect(0, 0, 1111, 21));
        menuFile = new QMenu(menuBar);
        menuFile->setObjectName(QString::fromUtf8("menuFile"));
        menuEdit = new QMenu(menuBar);
        menuEdit->setObjectName(QString::fromUtf8("menuEdit"));
        menuView = new QMenu(menuBar);
        menuView->setObjectName(QString::fromUtf8("menuView"));
        menuMesh = new QMenu(menuBar);
        menuMesh->setObjectName(QString::fromUtf8("menuMesh"));
        menuHelp = new QMenu(menuBar);
        menuHelp->setObjectName(QString::fromUtf8("menuHelp"));
        menuAnimation = new QMenu(menuBar);
        menuAnimation->setObjectName(QString::fromUtf8("menuAnimation"));
        menuEdit_2 = new QMenu(menuBar);
        menuEdit_2->setObjectName(QString::fromUtf8("menuEdit_2"));
        MainWindow->setMenuBar(menuBar);
        toolbarControl = new QToolBar(MainWindow);
        toolbarControl->setObjectName(QString::fromUtf8("toolbarControl"));
        toolbarControl->setMinimumSize(QSize(0, 0));
        toolbarControl->setIconSize(QSize(48, 48));
        MainWindow->addToolBar(Qt::TopToolBarArea, toolbarControl);
        statusBar = new QStatusBar(MainWindow);
        statusBar->setObjectName(QString::fromUtf8("statusBar"));
        MainWindow->setStatusBar(statusBar);
        toolBarBlobTree = new QToolBar(MainWindow);
        toolBarBlobTree->setObjectName(QString::fromUtf8("toolBarBlobTree"));
        QSizePolicy sizePolicy2(QSizePolicy::Preferred, QSizePolicy::Expanding);
        sizePolicy2.setHorizontalStretch(0);
        sizePolicy2.setVerticalStretch(0);
        sizePolicy2.setHeightForWidth(toolBarBlobTree->sizePolicy().hasHeightForWidth());
        toolBarBlobTree->setSizePolicy(sizePolicy2);
        toolBarBlobTree->setMovable(true);
        toolBarBlobTree->setIconSize(QSize(64, 64));
        MainWindow->addToolBar(Qt::TopToolBarArea, toolBarBlobTree);
        MainWindow->insertToolBarBreak(toolBarBlobTree);

        menuBar->addAction(menuFile->menuAction());
        menuBar->addAction(menuEdit->menuAction());
        menuBar->addAction(menuEdit_2->menuAction());
        menuBar->addAction(menuView->menuAction());
        menuBar->addAction(menuMesh->menuAction());
        menuBar->addAction(menuAnimation->menuAction());
        menuBar->addAction(menuHelp->menuAction());
        menuFile->addAction(actFileOpen);
        menuFile->addAction(actFileOpenLoadBenchmark);
        menuFile->addSeparator();
        menuFile->addAction(actFileSave);
        menuFile->addAction(actFileExportMesh);
        menuFile->addSeparator();
        menuFile->addAction(actFileClose);
        menuFile->addSeparator();
        menuFile->addAction(actFileExit);
        menuEdit->addAction(actAddSphere);
        menuEdit->addAction(actAddCylinder);
        menuEdit->addAction(actAddRing);
        menuEdit->addAction(actAddDisc);
        menuEdit->addAction(actAddCube);
        menuEdit->addAction(actAddTriangle);
        menuEdit->addAction(actAddPolygonPlane);
        menuEdit->addSeparator();
        menuEdit->addAction(actAddUnion);
        menuEdit->addAction(actAddIntersection);
        menuEdit->addAction(actAddDifference);
        menuEdit->addAction(actAddBlend);
        menuEdit->addAction(actAddRicciBlend);
        menuEdit->addAction(actAddSmoothDif);
        menuEdit->addAction(actAddCache);
        menuEdit->addSeparator();
        menuEdit->addAction(actAddTwist);
        menuEdit->addAction(actAddTaper);
        menuEdit->addAction(actAddBend);
        menuView->addAction(actViewResetCamera);
        menuView->addAction(actViewPanCamera);
        menuView->addAction(actViewFullScreen);
        menuMesh->addAction(actMeshSubDivide);
        menuMesh->addAction(actMeshPolygonize);
        menuMesh->addSeparator();
        menuMesh->addAction(actMeshInsert);
        menuHelp->addAction(actHelpAbout);
        menuAnimation->addAction(actAnimDrawGuide);
        menuAnimation->addSeparator();
        menuAnimation->addAction(actAnimStart);
        menuAnimation->addAction(actAnimStop);
        menuAnimation->addSeparator();
        menuAnimation->addAction(actAnimSetStartLoc);
        menuAnimation->addAction(actAnimSetEndLoc);
        menuAnimation->addSeparator();
        menuAnimation->addAction(actAnimSetStartScale);
        menuAnimation->addAction(actAnimSetEndScale);
        menuAnimation->addSeparator();
        menuAnimation->addAction(actAnimRemoveAll);
        menuEdit_2->addAction(actEditSelect);
        menuEdit_2->addAction(actEditMultiSelect);
        menuEdit_2->addSeparator();
        menuEdit_2->addAction(actEditTranslate);
        menuEdit_2->addAction(actEditRotate);
        menuEdit_2->addAction(actEditScale);
        menuEdit_2->addSeparator();
        menuEdit_2->addAction(actEditAlongX);
        menuEdit_2->addAction(actEditAlongY);
        menuEdit_2->addAction(actEditAlongZ);
        menuEdit_2->addSeparator();
        menuEdit_2->addAction(actEditDeletePrimitive);
        menuEdit_2->addSeparator();
        menuEdit_2->addAction(actEditUndo);
        menuEdit_2->addAction(actEditRedo);
        menuEdit_2->addSeparator();
        menuEdit_2->addAction(actEditTransformSkeleton);
        menuEdit_2->addSeparator();
        menuEdit_2->addAction(actEditCopy);
        menuEdit_2->addAction(actEditField);
        menuEdit_2->addAction(actEditConvert);
        toolbarControl->addAction(actFileOpen);
        toolbarControl->addAction(actFileSave);
        toolbarControl->addAction(actFileClose);
        toolbarControl->addSeparator();
        toolbarControl->addAction(actMeshPolygonize);
        toolbarControl->addSeparator();
        toolbarControl->addAction(actViewPanCamera);
        toolbarControl->addAction(actEditMultiSelect);
        toolbarControl->addAction(actEditTransformSkeleton);
        toolbarControl->addSeparator();
        toolbarControl->addAction(actEditUndo);
        toolbarControl->addAction(actEditRedo);
        toolbarControl->addAction(actEditCopy);
        toolbarControl->addSeparator();
        toolbarControl->addAction(actEditField);
        toolBarBlobTree->addAction(actAddSphere);
        toolBarBlobTree->addAction(actAddCylinder);
        toolBarBlobTree->addAction(actAddRing);
        toolBarBlobTree->addAction(actAddDisc);
        toolBarBlobTree->addAction(actAddCube);
        toolBarBlobTree->addAction(actAddTriangle);
        toolBarBlobTree->addSeparator();
        toolBarBlobTree->addAction(actAddUnion);
        toolBarBlobTree->addAction(actAddIntersection);
        toolBarBlobTree->addAction(actAddDifference);
        toolBarBlobTree->addAction(actAddSmoothDif);
        toolBarBlobTree->addAction(actAddBlend);
        toolBarBlobTree->addAction(actAddRicciBlend);
        toolBarBlobTree->addAction(actAddTwist);
        toolBarBlobTree->addAction(actAddTaper);
        toolBarBlobTree->addAction(actAddBend);

        retranslateUi(MainWindow);
        QObject::connect(sliderMouseDragScale, SIGNAL(valueChanged(int)), udMouseDragsScale, SLOT(setValue(int)));
        QObject::connect(udMouseDragsScale, SIGNAL(valueChanged(int)), sliderMouseDragScale, SLOT(setValue(int)));
        QObject::connect(udMouseDragsScale, SIGNAL(valueChanged(int)), sliderMouseDragScale, SLOT(setValue(int)));
        QObject::connect(sliderThreadsCount, SIGNAL(valueChanged(int)), udThreadsCount, SLOT(setValue(int)));
        QObject::connect(udThreadsCount, SIGNAL(valueChanged(int)), sliderThreadsCount, SLOT(setValue(int)));
        QObject::connect(btnNetClearLog, SIGNAL(clicked()), lstNetLog, SLOT(clear()));
        QObject::connect(sliderAnimationSpeed, SIGNAL(valueChanged(int)), udAnimationSpeed, SLOT(setValue(int)));
        QObject::connect(udAnimationSpeed, SIGNAL(valueChanged(int)), sliderAnimationSpeed, SLOT(setValue(int)));

        tsSceneStructure->setCurrentIndex(0);
        cboGridDim->setCurrentIndex(0);


        QMetaObject::connectSlotsByName(MainWindow);
    } // setupUi

    void retranslateUi(QMainWindow *MainWindow)
    {
        MainWindow->setWindowTitle(QApplication::translate("MainWindow", "Implicit Haptics Renderer V1.0", 0, QApplication::UnicodeUTF8));
        actFileOpen->setText(QApplication::translate("MainWindow", "Open...", 0, QApplication::UnicodeUTF8));
        actFileOpen->setShortcut(QApplication::translate("MainWindow", "Ctrl+O", 0, QApplication::UnicodeUTF8));
        actFileExit->setText(QApplication::translate("MainWindow", "Exit", 0, QApplication::UnicodeUTF8));
        actFileSave->setText(QApplication::translate("MainWindow", "Save", 0, QApplication::UnicodeUTF8));
        actFileSave->setShortcut(QApplication::translate("MainWindow", "Ctrl+S", 0, QApplication::UnicodeUTF8));
        actFileClose->setText(QApplication::translate("MainWindow", "Close", 0, QApplication::UnicodeUTF8));
        actViewResetCamera->setText(QApplication::translate("MainWindow", "Reset Camera", 0, QApplication::UnicodeUTF8));
        actMeshSubDivide->setText(QApplication::translate("MainWindow", "SubDivide", 0, QApplication::UnicodeUTF8));
        actMeshPolygonize->setText(QApplication::translate("MainWindow", "Polygonize", 0, QApplication::UnicodeUTF8));
        actMeshPolygonize->setShortcut(QApplication::translate("MainWindow", "F5", 0, QApplication::UnicodeUTF8));
        actHelpAbout->setText(QApplication::translate("MainWindow", "About...", 0, QApplication::UnicodeUTF8));
        actAddSphere->setText(QApplication::translate("MainWindow", "Sphere", 0, QApplication::UnicodeUTF8));
        actAddCylinder->setText(QApplication::translate("MainWindow", "Cylinder", 0, QApplication::UnicodeUTF8));
        actAddRing->setText(QApplication::translate("MainWindow", "Ring", 0, QApplication::UnicodeUTF8));
        actAddDisc->setText(QApplication::translate("MainWindow", "Disc", 0, QApplication::UnicodeUTF8));
        actAddUnion->setText(QApplication::translate("MainWindow", "Union", 0, QApplication::UnicodeUTF8));
        actAddIntersection->setText(QApplication::translate("MainWindow", "Intersection", 0, QApplication::UnicodeUTF8));
        actAddDifference->setText(QApplication::translate("MainWindow", "Difference", 0, QApplication::UnicodeUTF8));
        actAddBlend->setText(QApplication::translate("MainWindow", "Blend", 0, QApplication::UnicodeUTF8));
        actAddRicciBlend->setText(QApplication::translate("MainWindow", "Ricci Blend", 0, QApplication::UnicodeUTF8));
        actAddSmoothDif->setText(QApplication::translate("MainWindow", "Smooth Difference", 0, QApplication::UnicodeUTF8));
        actAddCache->setText(QApplication::translate("MainWindow", "Cache Node", 0, QApplication::UnicodeUTF8));
        actAnimStart->setText(QApplication::translate("MainWindow", "Start", 0, QApplication::UnicodeUTF8));
        actAnimStop->setText(QApplication::translate("MainWindow", "Stop", 0, QApplication::UnicodeUTF8));
        actAddPolygonPlane->setText(QApplication::translate("MainWindow", "Polygon Plane", 0, QApplication::UnicodeUTF8));
        actViewFullScreen->setText(QApplication::translate("MainWindow", "Full Screen", 0, QApplication::UnicodeUTF8));
        actEditTranslate->setText(QApplication::translate("MainWindow", "Translate", 0, QApplication::UnicodeUTF8));
        actEditTranslate->setShortcut(QApplication::translate("MainWindow", "G", 0, QApplication::UnicodeUTF8));
        actEditRotate->setText(QApplication::translate("MainWindow", "Rotate", 0, QApplication::UnicodeUTF8));
        actEditRotate->setShortcut(QApplication::translate("MainWindow", "R", 0, QApplication::UnicodeUTF8));
        actEditScale->setText(QApplication::translate("MainWindow", "Scale", 0, QApplication::UnicodeUTF8));
        actEditScale->setShortcut(QApplication::translate("MainWindow", "S", 0, QApplication::UnicodeUTF8));
        actEditAlongX->setText(QApplication::translate("MainWindow", "Along X", 0, QApplication::UnicodeUTF8));
        actEditAlongX->setShortcut(QApplication::translate("MainWindow", "X", 0, QApplication::UnicodeUTF8));
        actEditAlongY->setText(QApplication::translate("MainWindow", "Along Y", 0, QApplication::UnicodeUTF8));
        actEditAlongY->setShortcut(QApplication::translate("MainWindow", "Y", 0, QApplication::UnicodeUTF8));
        actEditAlongZ->setText(QApplication::translate("MainWindow", "Along Z", 0, QApplication::UnicodeUTF8));
        actEditAlongZ->setShortcut(QApplication::translate("MainWindow", "Z", 0, QApplication::UnicodeUTF8));
        actEditSelect->setText(QApplication::translate("MainWindow", "Select", 0, QApplication::UnicodeUTF8));
        actEditDeletePrimitive->setText(QApplication::translate("MainWindow", "Delete Primitive", 0, QApplication::UnicodeUTF8));
        actEditDeletePrimitive->setShortcut(QApplication::translate("MainWindow", "Del", 0, QApplication::UnicodeUTF8));
        actAddCube->setText(QApplication::translate("MainWindow", "Cube", 0, QApplication::UnicodeUTF8));
#ifndef QT_NO_TOOLTIP
        actAddCube->setToolTip(QApplication::translate("MainWindow", "Cube", 0, QApplication::UnicodeUTF8));
#endif // QT_NO_TOOLTIP
        actAddTriangle->setText(QApplication::translate("MainWindow", "Triangle", 0, QApplication::UnicodeUTF8));
        actAddTwist->setText(QApplication::translate("MainWindow", "Twist", 0, QApplication::UnicodeUTF8));
        actAddTaper->setText(QApplication::translate("MainWindow", "Taper", 0, QApplication::UnicodeUTF8));
        actAddBend->setText(QApplication::translate("MainWindow", "Bend", 0, QApplication::UnicodeUTF8));
        actViewPanCamera->setText(QApplication::translate("MainWindow", "Pan Camera", 0, QApplication::UnicodeUTF8));
#ifndef QT_NO_TOOLTIP
        actViewPanCamera->setToolTip(QApplication::translate("MainWindow", "Pan camera by holding mouse middle button.", 0, QApplication::UnicodeUTF8));
#endif // QT_NO_TOOLTIP
        actViewPanCamera->setShortcut(QApplication::translate("MainWindow", "P", 0, QApplication::UnicodeUTF8));
        actEditMultiSelect->setText(QApplication::translate("MainWindow", "Multiple Select", 0, QApplication::UnicodeUTF8));
#ifndef QT_NO_TOOLTIP
        actEditMultiSelect->setToolTip(QApplication::translate("MainWindow", "When enabled multiple primitives can be selected", 0, QApplication::UnicodeUTF8));
#endif // QT_NO_TOOLTIP
        actEditMultiSelect->setShortcut(QApplication::translate("MainWindow", "Space", 0, QApplication::UnicodeUTF8));
        actFileExportMesh->setText(QApplication::translate("MainWindow", "Export Mesh...", 0, QApplication::UnicodeUTF8));
        actEditUndo->setText(QApplication::translate("MainWindow", "Undo", 0, QApplication::UnicodeUTF8));
        actEditUndo->setShortcut(QApplication::translate("MainWindow", "Ctrl+Z", 0, QApplication::UnicodeUTF8));
        actEditRedo->setText(QApplication::translate("MainWindow", "Redo", 0, QApplication::UnicodeUTF8));
        actEditRedo->setShortcut(QApplication::translate("MainWindow", "Ctrl+R", 0, QApplication::UnicodeUTF8));
        actEditTransformSkeleton->setText(QApplication::translate("MainWindow", "Transform Skeleton", 0, QApplication::UnicodeUTF8));
        actEditTransformSkeleton->setShortcut(QApplication::translate("MainWindow", "T", 0, QApplication::UnicodeUTF8));
        actFileOpenLoadBenchmark->setText(QApplication::translate("MainWindow", "Load Benchmark Model", 0, QApplication::UnicodeUTF8));
        actAnimDrawGuide->setText(QApplication::translate("MainWindow", "Draw Guide Curve", 0, QApplication::UnicodeUTF8));
        actEditCopy->setText(QApplication::translate("MainWindow", "Copy", 0, QApplication::UnicodeUTF8));
        actEditCopy->setShortcut(QApplication::translate("MainWindow", "Ctrl+C", 0, QApplication::UnicodeUTF8));
        actionPaste->setText(QApplication::translate("MainWindow", "Paste", 0, QApplication::UnicodeUTF8));
        actionPaste->setShortcut(QApplication::translate("MainWindow", "Ctrl+V", 0, QApplication::UnicodeUTF8));
        actEditField->setText(QApplication::translate("MainWindow", "Field Function...", 0, QApplication::UnicodeUTF8));
        actEditConvert->setText(QApplication::translate("MainWindow", "Convert to Binary Tree", 0, QApplication::UnicodeUTF8));
        actAnimSetStartLoc->setText(QApplication::translate("MainWindow", "Move to Start Location", 0, QApplication::UnicodeUTF8));
        actAnimSetEndLoc->setText(QApplication::translate("MainWindow", "Move to End Location", 0, QApplication::UnicodeUTF8));
        actAnimSetStartScale->setText(QApplication::translate("MainWindow", "Set Start Scale", 0, QApplication::UnicodeUTF8));
        actAnimSetEndScale->setText(QApplication::translate("MainWindow", "Set End Scale", 0, QApplication::UnicodeUTF8));
        actAnimRemoveAll->setText(QApplication::translate("MainWindow", "Remove All Paths", 0, QApplication::UnicodeUTF8));
        actMeshInsert->setText(QApplication::translate("MainWindow", "Insert Mesh...", 0, QApplication::UnicodeUTF8));
        label->setText(QApplication::translate("MainWindow", "Polygonization Cell Size:", 0, QApplication::UnicodeUTF8));
        label_2->setText(QApplication::translate("MainWindow", "Threads Count:", 0, QApplication::UnicodeUTF8));
        chkComputeShaders->setText(QApplication::translate("MainWindow", "Compute Shaders", 0, QApplication::UnicodeUTF8));
        chkTBB->setText(QApplication::translate("MainWindow", "TBB", 0, QApplication::UnicodeUTF8));
        groupBox->setTitle(QApplication::translate("MainWindow", "Cell Shape", 0, QApplication::UnicodeUTF8));
        rbCube->setText(QApplication::translate("MainWindow", "Cube", 0, QApplication::UnicodeUTF8));
        rbTetraHedra->setText(QApplication::translate("MainWindow", "Tetrahedra", 0, QApplication::UnicodeUTF8));
        label_3->setText(QApplication::translate("MainWindow", "Mouse Drag Scale:", 0, QApplication::UnicodeUTF8));
        chkForceMC->setText(QApplication::translate("MainWindow", "Perform Marching Cubes in All MPUs", 0, QApplication::UnicodeUTF8));
        btnRunTests->setText(QApplication::translate("MainWindow", "run tests", 0, QApplication::UnicodeUTF8));
        label_4->setText(QApplication::translate("MainWindow", "Geodesic Threshold Angle (Adaptive):", 0, QApplication::UnicodeUTF8));
        chkEnableAdaptive->setText(QApplication::translate("MainWindow", "Perform Adaptive Subdivision", 0, QApplication::UnicodeUTF8));
        label_5->setText(QApplication::translate("MainWindow", "Grid Dim:", 0, QApplication::UnicodeUTF8));
        cboGridDim->clear();
        cboGridDim->insertItems(0, QStringList()
         << QApplication::translate("MainWindow", "8", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("MainWindow", "16", 0, QApplication::UnicodeUTF8)
         << QApplication::translate("MainWindow", "32", 0, QApplication::UnicodeUTF8)
        );
        label_9->setText(QApplication::translate("MainWindow", "Animation Speed:", 0, QApplication::UnicodeUTF8));
        tsSceneStructure->setTabText(tsSceneStructure->indexOf(tsTools), QApplication::translate("MainWindow", "General", 0, QApplication::UnicodeUTF8));
        groupBox_4->setTitle(QApplication::translate("MainWindow", "Display", 0, QApplication::UnicodeUTF8));
        label_6->setText(QApplication::translate("MainWindow", "Default Material:", 0, QApplication::UnicodeUTF8));
        chkShowNormals->setText(QApplication::translate("MainWindow", "Show Normals", 0, QApplication::UnicodeUTF8));
        chkShowChessBoard->setText(QApplication::translate("MainWindow", "Draw Chess Board", 0, QApplication::UnicodeUTF8));
        label_8->setText(QApplication::translate("MainWindow", "Normal Length:", 0, QApplication::UnicodeUTF8));
        chkShowBoxLayer->setText(QApplication::translate("MainWindow", "Show Layer Bounding Box", 0, QApplication::UnicodeUTF8));
        chkShowSeedPoints->setText(QApplication::translate("MainWindow", "Show Seed Points", 0, QApplication::UnicodeUTF8));
        groupBox_2->setTitle(QApplication::translate("MainWindow", "Mesh", 0, QApplication::UnicodeUTF8));
        rbShowMeshWireFrame->setText(QApplication::translate("MainWindow", "Show WireFrame", 0, QApplication::UnicodeUTF8));
        rbShowMeshSurface->setText(QApplication::translate("MainWindow", "Show Surface", 0, QApplication::UnicodeUTF8));
        rbShowMeshNone->setText(QApplication::translate("MainWindow", "None [Debug]", 0, QApplication::UnicodeUTF8));
        chkShowBoxPrimitive->setText(QApplication::translate("MainWindow", "Show Primitive Bounding Box", 0, QApplication::UnicodeUTF8));
        chkShowBoxPoly->setText(QApplication::translate("MainWindow", "Show Polygonization Box", 0, QApplication::UnicodeUTF8));
        chkShowGraph->setText(QApplication::translate("MainWindow", "Show Graph", 0, QApplication::UnicodeUTF8));
        chkColorCodeMPUMesh->setText(QApplication::translate("MainWindow", "Color Code MPU Meshes", 0, QApplication::UnicodeUTF8));
        chkShowAnimationCurves->setText(QApplication::translate("MainWindow", "Draw Animation Curves", 0, QApplication::UnicodeUTF8));
        tsSceneStructure->setTabText(tsSceneStructure->indexOf(tsDisplay), QApplication::translate("MainWindow", "Display", 0, QApplication::UnicodeUTF8));
#ifndef QT_NO_TOOLTIP
        btnLayerAdd->setToolTip(QApplication::translate("MainWindow", "Adds a new empty layer", 0, QApplication::UnicodeUTF8));
#endif // QT_NO_TOOLTIP
        btnLayerAdd->setText(QApplication::translate("MainWindow", "+", 0, QApplication::UnicodeUTF8));
#ifndef QT_NO_TOOLTIP
        btnLayerDelete->setToolTip(QApplication::translate("MainWindow", "Removes current active layer", 0, QApplication::UnicodeUTF8));
#endif // QT_NO_TOOLTIP
        btnLayerDelete->setText(QApplication::translate("MainWindow", "-", 0, QApplication::UnicodeUTF8));
        btnPrimitiveColor->setText(QApplication::translate("MainWindow", "Press to set Material", 0, QApplication::UnicodeUTF8));
        btnPrimitiveColor->setShortcut(QApplication::translate("MainWindow", "Space", 0, QApplication::UnicodeUTF8));
#ifndef QT_NO_TOOLTIP
        btnLayerDuplicate->setToolTip(QApplication::translate("MainWindow", "Duplicates active layer as a new one.", 0, QApplication::UnicodeUTF8));
#endif // QT_NO_TOOLTIP
        btnLayerDuplicate->setText(QApplication::translate("MainWindow", "Dup", 0, QApplication::UnicodeUTF8));
#ifndef QT_NO_TOOLTIP
        btnLayerSelectAll->setToolTip(QApplication::translate("MainWindow", "Selects all primitives within current layer", 0, QApplication::UnicodeUTF8));
#endif // QT_NO_TOOLTIP
        btnLayerSelectAll->setText(QApplication::translate("MainWindow", "SEL ALL", 0, QApplication::UnicodeUTF8));
        btnEditMaterial->setText(QApplication::translate("MainWindow", "Edit Material", 0, QApplication::UnicodeUTF8));
        tsSceneStructure->setTabText(tsSceneStructure->indexOf(tab), QApplication::translate("MainWindow", "Layers", 0, QApplication::UnicodeUTF8));
        tsSceneStructure->setTabText(tsSceneStructure->indexOf(tab_2), QApplication::translate("MainWindow", "Stats", 0, QApplication::UnicodeUTF8));
        groupBox_3->setTitle(QApplication::translate("MainWindow", "Settings", 0, QApplication::UnicodeUTF8));
        label_7->setText(QApplication::translate("MainWindow", "Port:", 0, QApplication::UnicodeUTF8));
        btnNetAddParticipant->setText(QApplication::translate("MainWindow", "+", 0, QApplication::UnicodeUTF8));
        btnNetStart->setText(QApplication::translate("MainWindow", "Start", 0, QApplication::UnicodeUTF8));
        btnNetStop->setText(QApplication::translate("MainWindow", "Stop", 0, QApplication::UnicodeUTF8));
        btnNetDelParticipant->setText(QApplication::translate("MainWindow", "-", 0, QApplication::UnicodeUTF8));
        chkNetAll->setText(QApplication::translate("MainWindow", "Synchronize with All", 0, QApplication::UnicodeUTF8));
        btnNetLock->setText(QApplication::translate("MainWindow", "Lock", 0, QApplication::UnicodeUTF8));
        groupBox_5->setTitle(QApplication::translate("MainWindow", "LOG", 0, QApplication::UnicodeUTF8));
        btnNetClearLog->setText(QApplication::translate("MainWindow", "Clear Log", 0, QApplication::UnicodeUTF8));
        tsSceneStructure->setTabText(tsSceneStructure->indexOf(tab_3), QApplication::translate("MainWindow", "NET", 0, QApplication::UnicodeUTF8));
        menuFile->setTitle(QApplication::translate("MainWindow", "File", 0, QApplication::UnicodeUTF8));
        menuEdit->setTitle(QApplication::translate("MainWindow", "Add", 0, QApplication::UnicodeUTF8));
        menuView->setTitle(QApplication::translate("MainWindow", "View", 0, QApplication::UnicodeUTF8));
        menuMesh->setTitle(QApplication::translate("MainWindow", "Mesh", 0, QApplication::UnicodeUTF8));
        menuHelp->setTitle(QApplication::translate("MainWindow", "Help", 0, QApplication::UnicodeUTF8));
        menuAnimation->setTitle(QApplication::translate("MainWindow", "Animation", 0, QApplication::UnicodeUTF8));
        menuEdit_2->setTitle(QApplication::translate("MainWindow", "Edit", 0, QApplication::UnicodeUTF8));
        toolBarBlobTree->setWindowTitle(QApplication::translate("MainWindow", "toolBar", 0, QApplication::UnicodeUTF8));
    } // retranslateUi

};

namespace Ui {
    class MainWindow: public Ui_MainWindow {};
} // namespace Ui

QT_END_NAMESPACE

#endif // UI_MAINWINDOW_H
